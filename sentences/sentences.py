import random


def main():
    random_sentence("single", "past")
    random_sentence("single", "present")
    random_sentence("single", "future")
    random_sentence("plural", "past")
    random_sentence("plural", "present")
    random_sentence("plural", "future")


def random_sentence(qty, verb_tense):
    """Returns a randomly generates sentence based on
    the quantity of subjects and the verb tense.

    Parameter
        qty = a string set to either "single" or "plural".
            If qty.casefold() == "single", this function will
            set num_qty = 1. Otherwise, num_qty = 2.
        verb_tense = a string that is set to "past", "present", or "future".

    Return: Prints a three-word sentence randomly generated by these parameters.
    """

    if qty.casefold() == "single":
        num_qty = 1
    else:
        num_qty = 2

    determiner_q1 = num_qty
    noun_q1 = num_qty
    verb_q1 = num_qty
    verb_t1 = verb_tense.casefold()
    prep_phrase = get_prepositional_phrase(num_qty)

    determiner = str(get_determiner(determiner_q1))
    noun = get_noun(noun_q1)
    verb = get_verb(verb_q1, verb_t1)

    sentance = f"{determiner.capitalize()} {noun} {verb} {prep_phrase}."
    print(sentance)


def get_determiner(quantity):
    """Return a randomly chosen determiner. A determiner is
    a word like "the", "a", "one", "two", "some", "many".
    If quantity == 1, this function will return either "a",
    "one", or "the". Otherwise this function will return
    either "two", "some", "many", or "the".

    Parameter
        quantity: an integer.
            If quantity == 1, this function will return a
            determiner for a single noun. Otherwise this
            function will return a determiner for a plural
            noun.
    Return: a randomly chosen determiner.
    """
    if quantity == 1:
        words = ["a", "one", "the"]
    else:
        words = ["two", "some", "many", "the"]

    # Randomly choose and return a determiner.
    word = random.choice(words)
    return word


def get_noun(quantity):
    """Return a randomly chosen determiner. A determiner is
    a word like "the", "a", "one", "two", "some", "many".
    If quantity == 1, this function will return either "a",
    "one", or "the". Otherwise this function will return
    either "two", "some", "many", or "the".

    Parameter
        quantity: an integer.
            If quantity == 1, this function will return a
            determiner for a single noun. Otherwise this
            function will return a determiner for a plural
            noun.
    Return: a randomly chosen determiner.
    """
    if quantity == 1:
        nouns = [
            "bird",
            "boy",
            "car",
            "cat",
            "child",
            "dog",
            "girl",
            "man",
            "rabbit",
            "woman",
        ]
    else:
        nouns = [
            "birds",
            "boys",
            "cars",
            "cats",
            "children",
            "dogs",
            "girls",
            "men",
            "rabbits",
            "women",
        ]
    noun = random.choice(nouns)
    return noun


def get_verb(quantity, tense):
    """
    Return a randomly chosen verb. If tense is "past",
    this function will return one of these ten verbs:
        "drank", "ate", "grew", "laughed", "thought",
        "ran", "slept", "talked", "walked", "wrote"
    If tense is "present" and quantity is 1, this
    function will return one of these ten verbs:
        "drinks", "eats", "grows", "laughs", "thinks",
        "runs", "sleeps", "talks", "walks", "writes"
    If tense is "present" and quantity is NOT 1,
    this function will return one of these ten verbs:
        "drink", "eat", "grow", "laugh", "think",
        "run", "sleep", "talk", "walk", "write"
    If tense is "future", this function will return one of
    these ten verbs:
        "will drink", "will eat", "will grow", "will laugh",
        "will think", "will run", "will sleep", "will talk",
        "will walk", "will write"

    Parameters
        quantity: an integer that determines if the
            returned verb is single or plural.
        tense: a string that determines the verb conjugation,
            either "past", "present" or "future".
    Return: a randomly chosen verb.
    """
    if tense == "past":
        verbs = [
            "drank",
            "ate",
            "grew",
            "laughed",
            "thought",
            "ran",
            "slept",
            "talked",
            "walked",
            "wrote",
        ]
    if tense == "present":
        if quantity == 1:
            verbs = [
                "drinks",
                "eats",
                "grows",
                "laughs",
                "thinks",
                "runs",
                "sleeps",
                "talks",
                "walks",
                "writes",
            ]
        else:
            verbs = [
                "drink",
                "eat",
                "grow",
                "laugh",
                "think",
                "run",
                "sleep",
                "talk",
                "walk",
                "write",
            ]
    if tense == "future":
        verbs = [
            "will drink",
            "will eat",
            "will grow",
            "will laugh",
            "will think",
            "will run",
            "will sleep",
            "will talk",
            "will walk",
            "will write",
        ]
    verb = random.choice(verbs)
    return verb


def get_preposition():
    """Return a randomly chosen preposition
    from this list of prepositions:
        "about", "above", "across", "after", "along",
        "around", "at", "before", "behind", "below",
        "beyond", "by", "despite", "except", "for",
        "from", "in", "into", "near", "of",
        "off", "on", "onto", "out", "over",
        "past", "to", "under", "with", "without"

    Return: a randomly chosen preposition.
    """
    prepositions = [
        "about",
        "above",
        "across",
        "after",
        "along",
        "around",
        "at",
        "before",
        "behind",
        "below",
        "beyond",
        "by",
        "despite",
        "except",
        "for",
        "from",
        "in",
        "into",
        "near",
        "of",
        "off",
        "on",
        "onto",
        "out",
        "over",
        "past",
        "to",
        "under",
        "with",
        "without",
    ]

    preposition = random.choice(prepositions)
    return preposition


def get_prepositional_phrase(quantity):
    """Build and return a prepositional phrase composed of three
    words: a preposition, a determiner, and a noun by calling the
    get_preposition, get_determiner, and get_noun functions.

    Parameter
        quantity: an integer that determines if the determiner
            and noun in the prepositional phrase returned from
            this function are single or pluaral.
    Return: a prepositional phrase.
    """
    prep = get_preposition()
    det = get_determiner(quantity)
    noun = get_noun(quantity)

    prep_phrase = str(f"{prep} {det} {noun}")
    return prep_phrase


if __name__ == "__main__":
    # bar will be invoked if this module is being run directly, but not via import!
    main()
    